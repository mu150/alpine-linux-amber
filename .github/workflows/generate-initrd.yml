name: Generate Alpine ARM64 initrd

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  generate-initrd:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Register QEMU emulation so we can spin up ARM64 containers
      - name: Register QEMU emulation
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      # 3. Build the initrd in an Alpine ARM64 container
      - name: Build initrd via Docker+QEMU
        run: |
          docker run --rm --privileged --platform linux/arm64 \
            -v "${{ github.workspace }}:/outputs" \
            alpine:3.22 \
            sh -euxc '
              # update and install kernel + mkinitfs
              apk update
              apk add --no-cache linux-virt mkinitfs busybox

              # detect kernel version dir
              KVER=$(ls /lib/modules | head -n1)
              echo "Generating initrd for kernel $KVER"

              # create the initramfs (goes to /boot/initramfs-virt)
              mkinitfs -k "$KVER"

              # copy it out of /boot to your workspace
              cp /boot/initramfs-* /outputs/initrd-arm64.gz

              # sanity-check
              ls -lh /outputs/initrd-arm64.gz
            '

      # 4. Upload the artifact
      - name: Upload initrd artifact
        uses: actions/upload-artifact@v4
        with:
          name: alpine-initrd-arm64
          path: initrd-arm64.gz
