name: Generate Alpine ARM64 initrd

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  generate-initrd:
    runs-on: ubuntu-latest

    steps:
      - name: Download Alpine minirootfs
        run: |
          wget -O alpine-minirootfs.tar.gz \
            http://dl-cdn.alpinelinux.org/alpine/v3.22/releases/aarch64/alpine-minirootfs-3.22.0-aarch64.tar.gz

      - name: Install host deps for ARM chroot
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support

      - name: Unpack rootfs & prepare chroot
        run: |
          mkdir rootfs
          tar xzf alpine-minirootfs.tar.gz -C rootfs
          sudo cp /etc/resolv.conf rootfs/etc/
          sudo cp /usr/bin/qemu-aarch64-static rootfs/usr/bin/

          # bind dev, proc, sys
          for fs in dev proc sys; do
            sudo mount --bind /$fs rootfs/$fs
          done

          # bind the workflow workspace into the chroot at /mnt
          sudo mkdir rootfs/mnt
          sudo mount --bind $PWD rootfs/mnt

      - name: Install mkinitfs & linux-virt inside chroot
        run: |
          sudo chroot rootfs /bin/sh -euxc '
            apk update
            apk add mkinitfs linux-virt
          '

      - name: Generate initrd and drop into workspace
        run: |
          # detect the kernel version inside the chroot
          MODVER=$(ls rootfs/lib/modules)
          echo "Using modules version: $MODVER"

          sudo chroot rootfs /bin/sh -euxc "
            mkinitfs \
              -c /etc/mkinitfs/mkinitfs.conf \
              -k $MODVER \
              -o /mnt/initrd-arm64.gz
          "

      - name: Cleanup chroot mounts
        run: |
          for fs in dev proc sys mnt; do
            sudo umount rootfs/$fs
          done

      - name: Upload initrd.gz
        uses: actions/upload-artifact@v4
        with:
          name: alpine-initrd-arm64
          path: initrd-arm64.gz
