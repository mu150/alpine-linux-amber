name: Generate Alpine ARM64 initrd

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  generate-initrd:
    runs-on: ubuntu-latest

    steps:
      # 1. Check out your repository
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Register QEMU emulation so `docker run --platform linux/arm64` works
      - name: Register QEMU emulation
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      # 3. Build the initrd inside an Alpine ARM64 container
      - name: Build initrd via Docker
        run: |
          # Run Alpine aarch64 under QEMU, mount your workspace at /outputs
          docker run --rm --privileged --platform linux/arm64 \
            -v "${{ github.workspace }}:/outputs" \
            alpine:3.22 \
            sh -euxc '
              # 3.1 Update index and install kernel+mkinitfs tooling
              apk update
              apk add --no-cache linux-virt mkinitfs busybox

              # 3.2 Find the installed kernel version
              KVER=$(ls /lib/modules | head -n1)
              echo "Generating initrd for kernel $KVER"

              # 3.3 Write the initramfs directly into your workspace
              mkinitfs -k "$KVER" -o /outputs/initrd-arm64.gz

              # 3.4 Show the file size
              ls -lh /outputs/initrd-arm64.gz
            '

      # 4. Upload the resulting initrd as an artifact
      - name: Upload initrd artifact
        uses: actions/upload-artifact@v4
        with:
          name: alpine-initrd-arm64
          path: initrd-arm64.gz
