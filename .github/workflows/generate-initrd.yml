name: Generate Alpine ARM64 initrd

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  generate-initrd:
    runs-on: ubuntu-latest
    env:
      WS: ${{ github.workspace }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Alpine minirootfs
        run: |
          wget -O alpine-minirootfs.tar.gz \
            http://dl-cdn.alpinelinux.org/alpine/v3.22/releases/aarch64/alpine-minirootfs-3.22.0-aarch64.tar.gz

      - name: Install host deps for ARM chroot
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static binfmt-support

      - name: Prepare rootfs & mount out/
        run: |
          mkdir -p rootfs/{dev,proc,sys,out} out
          tar xzf alpine-minirootfs.tar.gz -C rootfs
          sudo cp /etc/resolv.conf rootfs/etc/
          sudo cp /usr/bin/qemu-aarch64-static rootfs/usr/bin/
          for fs in dev proc sys; do sudo mount --bind /$fs rootfs/$fs; done
          sudo mount --bind "$WS/out" rootfs/out

      - name: Install mkinitfs & linux-virt
        run: |
          sudo chroot rootfs /bin/sh -euxc '
            apk update
            apk add mkinitfs linux-virt
          '

      - name: Generate initrd into out/
        run: |
          MODVER=$(ls rootfs/lib/modules)
          sudo chroot rootfs /bin/sh -euxc "
            mkinitfs \
              -c /etc/mkinitfs/mkinitfs.conf \
              -k $MODVER \
              -o /out/initrd-arm64.gz
          "

      - name: Cleanup mounts
        run: |
          for fs in dev proc sys out; do sudo umount rootfs/$fs || true; done

      - name: "Debug: show generated file"
        run: |
          echo "Host out/ folder now contains:"
          ls -lh out

      - name: Upload initrd artifact
        uses: actions/upload-artifact@v4
        with:
          name: alpine-initrd-arm64
          path: out/initrd-arm64.gz
